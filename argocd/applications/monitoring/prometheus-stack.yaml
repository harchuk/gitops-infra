apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 55.4.0
    helm:
      values: |
        grafana:
          enabled: true
          serviceMonitor:
            enabled: true
          sidecar:
            dashboards:
              enabled: true
          persistence:
            enabled: true
            size: 10Gi
          env:
            - name: JAEGER_AGENT_HOST
              value: "tempo"
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_ENDPOINT
              value: "http://tempo:14268/api/traces"
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Tempo
                  type: tempo
                  url: http://tempo:3100
                  access: proxy
                  isDefault: false
                  jsonData:
                    httpMethod: GET
                    tracesToLogs:
                      datasourceUid: 'loki'
                      tags: ['job', 'instance', 'pod', 'namespace']
                      mapTagNamesEnabled: false
                      spanStartTimeShift: '1h'
                      spanEndTimeShift: '1h'
                    serviceMap:
                      datasourceUid: 'prometheus'
                    search:
                      hide: false
                    nodeGraph:
                      enabled: true
                    traceQuery:
                      timeShiftEnabled: true
                      spanStartTimeShift: '1h'
                      spanEndTimeShift: '1h'
        alertmanager:
          enabled: true
          serviceMonitor:
            enabled: true
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 10Gi
        prometheus:
          enabled: true
          serviceMonitor:
            enabled: true
          prometheusSpec:
            serviceMonitorSelector: {}
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelector: {}
            podMonitorNamespaceSelector: {}
            podMonitorSelectorNilUsesHelmValues: false
            retention: 14d
            retentionSize: "30GB"
            resources:
              requests:
                memory: 1Gi
                cpu: 500m
              limits:
                memory: 2Gi
            storageSpec:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 50Gi
        prometheus-node-exporter:
          enabled: true
          serviceMonitor:
            enabled: true
        kube-state-metrics:
          enabled: true
        prometheusOperator:
          enabled: true
          serviceMonitor:
            enabled: true
          createCustomResource: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true 